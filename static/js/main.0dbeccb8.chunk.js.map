{"version":3,"sources":["components/ServerInterface/states.js","components/ServerInterface/options.js","components/ServerInterface/SelectEntry.js","components/ServerInterface/entries.js","components/ServerInterface/server.js","components/Images/logo.png","components/Home.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["availableStates","availableOptions","SelectEntry","entry","this","props","value","React","Component","data","type","entries","name","option","state","location","rate","reviews","getEntries","result","find","element","server","fetchRestaurants","fetchDentists","fetchShoppingMalls","fetchDryCleaning","removeEntry","index","console","log","alert","splice","remove","addEntry","push","add","addReview","review","Home","startSearching","place","setState","isSearching","undefined","handleKeyDown","e","keyCode","getPathWithCursor","cursor","pathname","username","SetUserName","addService","Navbar","bg","variant","alt","src","Logo","width","height","className","Brand","Nav","Link","href","disabled","length","Text","Form","inline","onSubmit","preventDefault","document","getElementById","Col","xs","Control","id","as","defaultValue","populateOption","populateStatesOption","Button","map","array","i","ListGroup","Item","populateReviews","Group","controlId","rows","size","user","window","removeEventListener","navigationBar","searchBar","searchResult","addBar","Login","event","trim","authenticated","onInputChange","target","from","to","Container","Row","Label","column","sm","placeholder","onChange","App","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0dbeccb8.chunk.js","sourcesContent":["var availableStates = [\r\n    'AL', 'AK', 'AZ', 'AR', 'CA',\r\n    'CO', 'CT', 'DE', 'FL', 'GA',\r\n    'HI', 'ID', 'IL', 'IN', 'IA',\r\n    'KS', 'KY', 'LA', 'ME', 'MD',\r\n    'MA', 'MI', 'MN', 'MS', 'MO',\r\n    'MT', 'NE', 'NV', 'NH', 'NJ',\r\n    'NM', 'NY', 'NC', 'ND', 'OH',\r\n    'OK', 'OR', 'PA', 'RI', 'SC',\r\n    'SD', 'TN', 'TX', 'UT', 'VT',\r\n    'VA', 'WA', 'WV', 'WI', 'WY',\r\n];\r\nexport default availableStates;","var availableOptions = [\r\n    'Restaurants',\r\n    'Dentists',\r\n    'Shopping Malls',\r\n    'Dry Cleaning',\r\n];\r\nexport default availableOptions;","import React from 'react';\r\nclass SelectEntry extends React.Component{\r\n    render(){\r\n        const {entry} = this.props;\r\n        return(\r\n            <option value={entry}>\r\n                {entry}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectEntry;","let data = [\r\n    {\r\n        type:'Restaurants',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [\r\n                {\r\n                \r\n                    name: \"Federal Pizza\",\r\n                    option: \"Restaurants\",\r\n                    state: \"AZ\",\r\n                    location: \"5210 N Central Ave Phoenix, AZ 85012\",\r\n                    rate: 4,\r\n                    reviews: [\"Awful place\",\"great\"]\r\n                },\r\n                {\r\n                    name: \"Federal Pizza\",\r\n                    option: \"Restaurants\",\r\n                    state: \"AZ\",\r\n                    location: \"5210 N Central Ave Phoenix, AZ 85012\",\r\n                    rate: 4,\r\n                    reviews: []\r\n                },\r\n                {\r\n                    name: \"Federal Pizza\",\r\n                    option: \"Restaurants\",\r\n                    state: \"AZ\",\r\n                    location: \"5210 N Central Ave Phoenix, AZ 85012\",\r\n                    rate: 4,\r\n                    reviews: []\r\n                }\r\n            ],\r\n            'AR': [],\r\n            'CA': [],\r\n\r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Dentists',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Shopping Malls',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Dry Cleaning',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    }\r\n\r\n]\r\n\r\nexport default data;\r\n\r\n","import data from './entries';\r\nlet getEntries = (type,state) => {\r\n    //Later on we will connect to a backend and fetch all the entries\r\n    let result = data.find(element => element.type === type);\r\n    if(result){\r\n        return result.entries[state];\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\n\r\nlet remove = (type,state,index) => {\r\n    let result = data.find(element => element.type === type);\r\n    console.log(\"type: \"+type+\":\"+result);\r\n    if(result){\r\n        alert(result.entries[state].splice(index,1));\r\n    }\r\n}\r\n\r\nlet add = (type, state, name, location, rate) => {\r\n    let result = data.find(element => element.type === type);\r\n    if(result){\r\n        result.entries[state].push({\r\n            name: name,\r\n            option: type,\r\n            state: state,\r\n            location: location,\r\n            rate: rate,\r\n            reviews: []\r\n        })\r\n        console.log(result);\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nlet addReview = (type,state,review,index) => {\r\n    let result = data.find(element => element.type === type);\r\n    if(result){\r\n        result.entries[state][index].reviews.push(review);\r\n    }\r\n}\r\n\r\n\r\nlet server = {\r\n    fetchRestaurants : (state) => {\r\n        return getEntries('Restaurants',state);\r\n    },\r\n    fetchDentists : (state) => {\r\n        return getEntries('Dentists',state);\r\n    },\r\n    fetchShoppingMalls : (state) => {\r\n        return getEntries('Shopping Malls',state);\r\n    },\r\n    fetchDryCleaning : (state) => {\r\n        return getEntries('Dry Cleaning',state);\r\n    },\r\n    removeEntry : (type, state, index) => {\r\n        remove(type, state, index);\r\n    },\r\n    addEntry : (type,state, name, location,rate) => {\r\n        add(type, state, name, location, rate);\r\n    },\r\n    addReview: (type, state, review, index) => {\r\n        addReview(type,state,review,index);\r\n    }\r\n\r\n};\r\n\r\nexport default server;","export default __webpack_public_path__ + \"static/media/logo.d69cd9a3.png\";","import React from 'react';\r\nimport availableStates from './ServerInterface/states.js';\r\nimport availableOptions from './ServerInterface/options.js';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { Navbar,Nav,Form,Button,Col,ListGroup} from 'react-bootstrap';\r\nimport SelectEntry from './ServerInterface/SelectEntry.js';\r\nimport server from './ServerInterface/server';\r\nimport Logo from \"./Images/logo.png\";\r\n//Link: for client side swithcing\r\n//Button: for server side\r\n\r\n\r\nclass Home extends React.Component {\r\n    //Needs method to check whether user is already logged in\r\n    constructor(props){ //Constructor always receive props\r\n        super(props);   //Superconstructor\r\n        this.state = {\r\n            username: '',\r\n            isSearching: false,\r\n            option: '',\r\n            state: '',\r\n            entries:[],\r\n        };\r\n    }\r\n\r\n    navigationBar(){\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={Logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{' '}\r\n                    <Navbar.Brand>My Nearby Places</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href='/mynearbyplaces' disabled>Home</Nav.Link>\r\n                        {this.state.username.length > 0 \r\n                            ? <Navbar.Text>Hello, {this.state.username}</Navbar.Text>\r\n                            :<Nav.Link href='/login'>Login</Nav.Link>}\r\n\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    searchBar(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand> Search Engine </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            var option = document.getElementById('option').value;\r\n                            var place = document.getElementById('place').value;\r\n                            this.startSearching(option,place);\r\n                        }\r\n                    }>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Options</Navbar.Text>\r\n                        </Col>\r\n\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='option' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option key='default'>Choose...</option>\r\n                                {this.populateOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Place</Navbar.Text>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='place' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option>Choose...</option>\r\n                                {this.populateStatesOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n\r\n                        <Button variant=\"outline-info\" type=\"submit\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    populateStatesOption(data){\r\n        return(\r\n            availableStates.map(data=>\r\n                <SelectEntry entry={data} key={data} />)\r\n        );\r\n    }\r\n    populateOption(){\r\n        return(\r\n            availableOptions.map(data=>\r\n                <SelectEntry entry={data} key={data}/>)\r\n        );\r\n    }\r\n\r\n    startSearching = (option,place) => {\r\n        this.setState({\r\n            option: option,\r\n            place: place\r\n        });\r\n\r\n        let result;\r\n        // console.log(\"option: \"+option+\", place: \"+place);\r\n        this.setState({\r\n            isSearching: true\r\n        });\r\n        if(option === \"Restaurants\"){\r\n            result = server.fetchRestaurants(place);\r\n        }\r\n        if(option === \"Dentists\"){\r\n            result = server.fetchDentists(place);\r\n        }\r\n        if(option === \"Shopping Malls\"){\r\n            result = server.fetchShoppingMalls(place);\r\n        }\r\n        if(option === \"Dry Cleaning\"){\r\n            result = server.fetchDryCleaning(place);\r\n        }\r\n        console.log(result);\r\n        if(result === undefined){\r\n            this.setState({entries:[]});\r\n            return;\r\n        }\r\n        this.setState({entries:result});\r\n        return;\r\n\r\n    }\r\n\r\n    populateReviews(array){\r\n        var result='';\r\n        for(let i=1;i<array.length+1;i++){\r\n            result += i+\". \"+array[i-1]+\" \";\r\n        }\r\n        return result;\r\n    }\r\n\r\n    searchResult(){\r\n        let result = this.state.entries;\r\n\r\n        return(\r\n            result.map((data,index) =>\r\n            <ListGroup.Item key= {index}>\r\n                {data.name}\r\n                <br/>Location: {data.location}\r\n                <br/>Rate: {data.rate}\r\n                <br/>Reviews: {this.populateReviews(data.reviews)}\r\n                <br/>\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault();\r\n                            var review = document.getElementById('addReview'+index).value;\r\n                            server.addReview(data.option, data.state, review, index);\r\n                            this.startSearching(data.option, data.state);\r\n                        }\r\n                    }>\r\n                    <Navbar.Text>Add Review</Navbar.Text>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control id={\"addReview\"+index} as=\"textarea\" rows={1} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Button variant=\"outline-success\" size=\"sm\" type=\"submit\">\r\n                        Add Review\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            server.removeEntry(data.option, data.state, index);\r\n                            this.startSearching(data.option, data.state);\r\n                        }\r\n                    }>\r\n                    <Button variant=\"outline-danger\" size=\"sm\" type=\"submit\">\r\n                        Delete Place\r\n                    </Button>\r\n                </Form>\r\n            </ListGroup.Item>\r\n           )\r\n        );\r\n\r\n    }\r\n\r\n\r\n    //executed only after the page is rendered\r\n    componentDidMount(){\r\n        const location = this.props.location;\r\n        //Anything sent from previous page is saved in props.location\r\n        if(location){\r\n            if(location.state){\r\n                //Indicates that this comes from Login page\r\n                if(location.state.user){\r\n                    //Set additional condition to escape infinite loop\r\n                    if(location.state.user !== this.state.username){\r\n                        this.SetUserName(location.state.user);\r\n                    }\r\n                }\r\n                if(location.state.option){\r\n                    this.setState({\r\n                        option: location.state.option\r\n                    })\r\n                }\r\n                if(location.state.state){\r\n                    this.setState({\r\n                        state: location.state.state\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Explictly delete the event listener when everything is deleted so\r\n    // it doesn't run on the background\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"keydown\",this.handleKeyDown);\r\n    }\r\n    //e : event object\r\n    handleKeyDown = (e) =>{\r\n        if(e.keyCode === 39) {  //Right arrow key\r\n\r\n        }else if(e.keyCode === 37) {  //Left arrow key\r\n\r\n        }\r\n    }\r\n\r\n    getPathWithCursor=(cursor)=>{\r\n        let from = {pathname: '/quiz', state: {\r\n            username: this.state.username,\r\n            cursor: cursor\r\n        }};\r\n        return from;\r\n    }\r\n  \r\n\r\n    SetUserName = (username) =>{\r\n        this.setState({\r\n            username: username\r\n        });\r\n    }\r\n\r\n\r\n\r\n    addBar(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand> Add Service </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            var option = document.getElementById('addoption').value;\r\n                            var place = document.getElementById('addplace').value;\r\n                            var name = document.getElementById('addname').value;\r\n                            var location = document.getElementById('addlocation').value;\r\n                            var rate = document.getElementById('addrate').value;\r\n                            this.addService(option,place,name,location,rate);\r\n                        }\r\n                    }>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Options</Navbar.Text>\r\n                        </Col>\r\n\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addoption' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option key='default'>Choose...</option>\r\n                                {this.populateOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Place</Navbar.Text>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addplace' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option>Choose...</option>\r\n                                {this.populateStatesOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Navbar.Text>Location</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control id='addlocation' as=\"textarea\" rows={1} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Navbar.Text>Name</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control id='addname' as=\"textarea\" rows={1} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Navbar.Text>Rate</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addrate' as=\"select\" defaultValue=\"Choose...\">\r\n                                <SelectEntry entry={1} key={'rate1'} />\r\n                                <SelectEntry entry={2} key={'rate2'} />\r\n                                <SelectEntry entry={3} key={'rate3'} />\r\n                                <SelectEntry entry={4} key={'rate4'} />\r\n                                <SelectEntry entry={5} key={'rate5'} />\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Button variant=\"outline-info\" type=\"submit\">Add</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addService = (option,place,name,location,rate) =>{\r\n        this.setState({\r\n            option: option,\r\n            place: place\r\n        });\r\n        server.addEntry(option, place,name,location,rate);\r\n        // alert(option+place+name+location+rate);\r\n        \r\n    }\r\n    render() { //mandatory method\r\n        console.log(this.state);\r\n        return (    //If (this.state.username.length > 0 ) == true, show the username, otherwise go to button\r\n            <div id=\"root\">\r\n                {this.navigationBar()} \r\n                {this.searchBar()}\r\n                <ListGroup id=\"result\">\r\n                    {this.state.isSearching\r\n                    ?this.searchResult()\r\n                    :<div></div>}\r\n                </ListGroup>\r\n                {this.addBar()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;    //Components which exported can be imported on other pages","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Navbar,Nav,Form,Row,Col,Button,Container } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){ //Constructor always receive props\r\n        super(props);   //Superconstructor\r\n        this.state = {\r\n            username: '',\r\n            authenticated: false\r\n        };\r\n    }    \r\n    navigationBar(){\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>My Nearby Places</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/mynearbyplaces\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/addservice\">Add Services</Nav.Link>\r\n                        <Nav.Link href='/login' disabled>Login</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        //You don't access the DOM object directly\r\n        if(this.state.username.trim().length > 0){  //trim(): removes space at the beginning and the end\r\n            //User Successfully signed in\r\n            //Now changed the state\r\n            this.setState({\r\n                authenticated: true\r\n            });\r\n            \r\n        }\r\n        event.preventDefault();\r\n    }\r\n    onInputChange = (event) => { //add event if you need to know which function fired the function\r\n        //event target is the input tag\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value   //You need to add bracket to indicate that the string is a key\r\n        });\r\n    }\r\n\r\n    render(){\r\n        //Save the data which wants to be passed to the variable 'from'\r\n        let from = {pathname: '/', state: {user: this.state.username}};\r\n        if(this.state.authenticated){\r\n            return (\r\n                <Redirect to= {from} />\r\n            );\r\n            //Convention to provide object to the Redirect\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {this.navigationBar()}\r\n                <br></br>\r\n                <Container>\r\n                    <Form  onSubmit={this.onSubmit}>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"2\">\r\n                            Username\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                            <Form.Control\r\n                                name = \"username\"\r\n                                placeholder=\"username\"\r\n                                onChange={this.onInputChange} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"outline-primary\" type=\"submit\">Login</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport './App.css';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' render={props => <Home {...props}/>}>\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
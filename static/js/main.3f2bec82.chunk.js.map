{"version":3,"sources":["components/ServerInterface/states.js","components/ServerInterface/options.js","components/ServerInterface/SelectEntry.js","components/ServerInterface/entries.js","components/ServerInterface/server.js","components/Images/logo.png","components/Home.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["availableStates","availableOptions","SelectEntry","entry","this","props","value","React","Component","data","type","entries","name","option","state","location","rate","reviews","api","getEntries","fetch","then","x","json","y","catch","e","console","log","server","fetchRestaurants","fetchDentists","fetchShoppingMalls","fetchDryCleaning","removeEntry","index","result","find","element","splice","remove","addEntry","method","headers","body","JSON","stringify","add","addReview","id","review","updateLocation","updateRate","Home","startSearching","place","setState","isSearching","undefined","handleKeyDown","keyCode","getPathWithCursor","cursor","pathname","username","SetUserName","addService","Navbar","bg","variant","alt","src","Logo","width","height","className","Brand","Nav","Link","as","to","disabled","length","Text","Form","inline","onSubmit","preventDefault","document","getElementById","Col","xs","Control","defaultValue","populateOption","populateStatesOption","Button","map","array","i","ListGroup","Item","trim","Group","rows","size","user","window","removeEventListener","navigationBar","searchBar","searchResult","addBar","Login","event","authenticated","onInputChange","target","from","Container","Row","controlId","Label","column","sm","placeholder","onChange","App","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3f2bec82.chunk.js","sourcesContent":["var availableStates = [\r\n    'AL', 'AK', 'AZ', 'AR', 'CA',\r\n    'CO', 'CT', 'DE', 'FL', 'GA',\r\n    'HI', 'ID', 'IL', 'IN', 'IA',\r\n    'KS', 'KY', 'LA', 'ME', 'MD',\r\n    'MA', 'MI', 'MN', 'MS', 'MO',\r\n    'MT', 'NE', 'NV', 'NH', 'NJ',\r\n    'NM', 'NY', 'NC', 'ND', 'OH',\r\n    'OK', 'OR', 'PA', 'RI', 'SC',\r\n    'SD', 'TN', 'TX', 'UT', 'VT',\r\n    'VA', 'WA', 'WV', 'WI', 'WY',\r\n];\r\nexport default availableStates;","var availableOptions = [\r\n    'Restaurants',\r\n    'Dentists',\r\n    'Shopping Malls',\r\n    'Dry Cleaning',\r\n];\r\nexport default availableOptions;","import React from 'react';\r\nclass SelectEntry extends React.Component{\r\n    render(){\r\n        const {entry} = this.props;\r\n        return(\r\n            <option value={entry}>\r\n                {entry}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectEntry;","let data = [\r\n    {\r\n        type:'Restaurants',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [\r\n                {\r\n                \r\n                    name: \"Federal Pizza\",\r\n                    option: \"Restaurants\",\r\n                    state: \"AZ\",\r\n                    location: \"5210 N Central Ave Phoenix, AZ 85012\",\r\n                    rate: 4,\r\n                    reviews: [\"Eat Pizza!\",\"Great!\"]\r\n                },\r\n                {\r\n                    name: \"Denny's\",\r\n                    option: \"Restaurants\",\r\n                    state: \"AZ\",\r\n                    location: \"8737 NW Grand Ave Peoria, AZ 85345\",\r\n                    rate: 2,\r\n                    reviews: [\"Awful place\"]\r\n                }\r\n            ],\r\n            'AR': [],\r\n            'CA': [],\r\n\r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Dentists',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [\r\n                {\r\n                \r\n                    name: \"Desert Springs Dental\",\r\n                    option: \"Dentists\",\r\n                    state: \"AZ\",\r\n                    location: \"5656 S Power Rd Ste 142 Gilbert, AZ 85295\",\r\n                    rate: 5,\r\n                    reviews: [\"I love it! \",\"Nice dentist!\"]\r\n                },\r\n            ],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Shopping Malls',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [\r\n                {\r\n                \r\n                    name: \"Biltmore Fashion Park\",\r\n                    option: \"Shopping Malls\",\r\n                    state: \"AZ\",\r\n                    location: \"2502 E Camelback Rd Phoenix, AZ 85016\",\r\n                    rate: 4,\r\n                    reviews: [\"Everything I needed\"]\r\n                },\r\n            ],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    },\r\n    {\r\n        type:'Dry Cleaning',\r\n        entries : {\r\n            'AL': [],\r\n            'AK': [],\r\n            'AZ': [\r\n                {\r\n                \r\n                    name: \"Organic Dry Cleaners & Laundry\",\r\n                    option: \"Dry Cleaning\",\r\n                    state: \"AZ\",\r\n                    location: \"10810 N Tatum Blvd Ste 101 Phoenix, AZ 85028\",\r\n                    rate: 5,\r\n                    reviews: [\"Very clean\"]\r\n                },\r\n            ],\r\n            'AR': [],\r\n            'CA': [],\r\n            \r\n            'CO': [],\r\n            'CT': [],\r\n            'DE': [],\r\n            'FL': [],\r\n            'GA': [],\r\n            \r\n            'HI': [],\r\n            'ID': [],\r\n            'IL': [],\r\n            'IN': [],\r\n            'IA': [],\r\n            \r\n            'KS': [],\r\n            'KY': [],\r\n            'LA': [],\r\n            'ME': [],\r\n            'MD': [],\r\n            \r\n            'MA': [],\r\n            'MI': [],\r\n            'MN': [],\r\n            'MS': [],\r\n            'MO': [],\r\n            \r\n            'MT': [],\r\n            'NE': [],\r\n            'NV': [],\r\n            'NH': [],\r\n            'NJ': [],\r\n            \r\n            'NM': [],\r\n            'NY': [],\r\n            'NC': [],\r\n            'ND': [],\r\n            'OH': [],\r\n            \r\n            'OK': [],\r\n            'OR': [],\r\n            'PA': [],\r\n            'RI': [],\r\n            'SC': [],\r\n            \r\n            'SD': [],\r\n            'TN': [],\r\n            'TX': [],\r\n            'UT': [],\r\n            'VT': [],\r\n            \r\n            'VA': [],\r\n            'WA': [],\r\n            'WV': [],\r\n            'WI': [],\r\n            'WY': [],\r\n            \r\n        }\r\n    }\r\n\r\n]\r\n\r\nexport default data;\r\n\r\n","import data from './entries';\r\nlet api = `https://eujinko-mynearbyplaces.herokuapp.com`;\r\n\r\nlet getEntries = (type,state) => {\r\n    //Later on we will connect to a backend and fetch all the entries\r\n    return(    fetch(api+\"/search/\"+type+\"/\"+state).then( x => {\r\n        return x.json();\r\n    }).then( y => {\r\n        return y;\r\n    }).catch(e => {\r\n        console.log(\"ERROR: From server\\n\"+e);\r\n    })\r\n    )\r\n}\r\n\r\nlet remove = (type,state,index) => {\r\n    let result = data.find(element => element.type === type);\r\n    console.log(\"type: \"+type+\":\"+result);\r\n    if(result){\r\n        result.entries[state].splice(index,1);\r\n    }\r\n}\r\n\r\nlet add = (type, state, name, location, rate) => {\r\n\r\n    fetch(api+'/place', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            option: type,\r\n            state: state,\r\n            location: location,\r\n            rate: rate,\r\n            reviews: ''\r\n        })\r\n    }).then( x => x.json()).then( y => console.log(y));\r\n}\r\n\r\nlet addReview = (id,review) => {\r\n    fetch(api+'/review/'+id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            reviews: review\r\n        })\r\n    }).then( x => x.json()).then( y => console.log(y));\r\n}\r\n\r\nlet updateLocation = (type,state,location,index) => {\r\n    let result = data.find(element => element.type === type);\r\n    if(result){\r\n        result.entries[state][index].location = location;\r\n    }\r\n}\r\nlet updateRate = (type,state,rate,index) => {\r\n    let result = data.find(element => element.type === type);\r\n    if(result){\r\n        result.entries[state][index].rate = rate;\r\n    }\r\n}\r\nlet server = {\r\n    fetchRestaurants : (state) => {\r\n        return getEntries('Restaurants',state);\r\n    },\r\n    fetchDentists : (state) => {\r\n        return getEntries('Dentists',state);\r\n    },\r\n    fetchShoppingMalls : (state) => {\r\n        return getEntries('Shopping Malls',state);\r\n    },\r\n    fetchDryCleaning : (state) => {\r\n        return getEntries('Dry Cleaning',state);\r\n    },\r\n    removeEntry : (type, state, index) => {\r\n        remove(type, state, index);\r\n    },\r\n    addEntry : (type,state, name, location,rate) => {\r\n        add(type, state, name, location, rate);\r\n    },\r\n    addReview: (id,review) => {\r\n        addReview(id,review);\r\n    },\r\n    updateLocation: (type, state, location, index) => {\r\n        updateLocation(type,state,location,index);\r\n    },\r\n    updateRate: (type, state, rate, index) => {\r\n        updateRate(type,state,rate,index);\r\n    },\r\n\r\n};\r\n\r\nexport default server;","export default __webpack_public_path__ + \"static/media/logo.d69cd9a3.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport availableStates from './ServerInterface/states.js';\r\nimport availableOptions from './ServerInterface/options.js';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { Navbar,Nav,Form,Button,Col,ListGroup} from 'react-bootstrap';\r\nimport SelectEntry from './ServerInterface/SelectEntry.js';\r\nimport server from './ServerInterface/server';\r\nimport Logo from \"./Images/logo.png\";\r\n//Link: for client side swithcing\r\n//Button: for server side\r\n\r\n\r\nclass Home extends React.Component {\r\n    //Needs method to check whether user is already logged in\r\n    constructor(props){ //Constructor always receive props\r\n        super(props);   //Superconstructor\r\n        this.state = {\r\n            username: '',\r\n            isSearching: false,\r\n            option: '',\r\n            state: '',\r\n            entries:[],\r\n        };\r\n    }\r\n\r\n    navigationBar(){\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={Logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{' '}\r\n                    <Navbar.Brand>My Nearby Places</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to='/' disabled>Home</Nav.Link>\r\n                        {this.state.username.length > 0 \r\n                            ? <Navbar.Text>Hello, {this.state.username}</Navbar.Text>\r\n                            :<Nav.Link as={Link} to='/login'>Login</Nav.Link>}\r\n\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    searchBar(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand> Search Engine </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            var option = document.getElementById('option').value;\r\n                            var place = document.getElementById('place').value;\r\n                            this.startSearching(option,place);\r\n                        }\r\n                    }>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Options</Navbar.Text>\r\n                        </Col>\r\n\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='option' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option key='default'>Choose...</option>\r\n                                {this.populateOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Place</Navbar.Text>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='place' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option>Choose...</option>\r\n                                {this.populateStatesOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n\r\n                        <Button variant=\"outline-info\" type=\"submit\">Search</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    populateStatesOption(data){\r\n        return(\r\n            availableStates.map(data=>\r\n                <SelectEntry entry={data} key={data} />)\r\n        );\r\n    }\r\n    populateOption(){\r\n        return(\r\n            availableOptions.map(data=>\r\n                <SelectEntry entry={data} key={data}/>)\r\n        );\r\n    }\r\n\r\n    startSearching = (option,place) => {\r\n        this.setState({\r\n            option: option,\r\n            place: place\r\n        });\r\n\r\n        let result;\r\n        // console.log(\"option: \"+option+\", place: \"+place);\r\n        this.setState({\r\n            isSearching: true\r\n        });\r\n        if(option === \"Restaurants\"){\r\n            result = server.fetchRestaurants(place).then(x=>{\r\n                if(x === undefined){\r\n                    this.setState({entries:[]});\r\n                    return;\r\n                }\r\n                this.setState({entries:x});\r\n                console.log(x);\r\n            })\r\n        }\r\n        if(option === \"Dentists\"){\r\n            result = server.fetchDentists(place).then(x=>{\r\n                if(x === undefined){\r\n                    this.setState({entries:[]});\r\n                    return;\r\n                }\r\n                this.setState({entries:x});\r\n                console.log(x);\r\n            })\r\n        }\r\n        if(option === \"Shopping Malls\"){\r\n            result = server.fetchShoppingMalls(place).then(x=>{\r\n                if(x === undefined){\r\n                    this.setState({entries:[]});\r\n                    return;\r\n                }\r\n                this.setState({entries:x});\r\n                console.log(x);\r\n            })\r\n        }\r\n        if(option === \"Dry Cleaning\"){\r\n            result = server.fetchDryCleaning(place).then(x=>{\r\n                if(x === undefined){\r\n                    this.setState({entries:[]});\r\n                    return;\r\n                }\r\n                this.setState({entries:x});\r\n                console.log(x);\r\n            })\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    populateReviews(array){\r\n        var result='';\r\n        for(let i=1;i<array.length+1;i++){\r\n            result += i+\". \"+array[i-1]+\" \";\r\n        }\r\n        return result;\r\n    }\r\n\r\n    searchResult(){\r\n        let result = this.state.entries;\r\n        return(\r\n            result.map((data,index) =>\r\n            <ListGroup.Item key= {index}>\r\n                {data.name}\r\n                <br/>Location: {data.location}\r\n                <br/>Rate: {data.rate}\r\n                <br/>Reviews: {data.reviews}\r\n                <br/>\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault();\r\n                            var review = document.getElementById('addReview'+index).value;\r\n                            if(review.trim().length > 0){\r\n                                server.addReview(data.id, review);\r\n                                this.startSearching(data.option, data.state);\r\n                            }\r\n\r\n                        }\r\n                    }>\r\n                    <Navbar.Text>Add Review</Navbar.Text>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group>\r\n                            <Form.Control id={\"addReview\"+index} as=\"textarea\" rows={1} defaultValue=\"\" />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Button variant=\"outline-success\" size=\"sm\" type=\"submit\">\r\n                        Add Review\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault();\r\n                            var location = document.getElementById('updateLocation'+index).value;\r\n                            if(location.trim().length > 0){\r\n                                server.updateLocation(data.option, data.state, location, index);\r\n                                this.startSearching(data.option, data.state);\r\n                            }\r\n\r\n                        }\r\n                    }>\r\n                    <Navbar.Text>Update Location</Navbar.Text>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group>\r\n                            <Form.Control id={\"updateLocation\"+index} as=\"textarea\" rows={1}  defaultValue=\"\"/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Button variant=\"outline-success\" size=\"sm\" type=\"submit\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault();\r\n                            var rate = document.getElementById('updateRate'+index).value;\r\n                            server.updateRate(data.option, data.state, rate, index);\r\n                            this.startSearching(data.option, data.state);\r\n                        }\r\n                    }>\r\n\r\n                    <Navbar.Text>Update Rate</Navbar.Text>\r\n                    <Form.Control id={'updateRate' + index} as=\"select\" defaultValue=\"Choose...\">\r\n                        <SelectEntry entry={1} key={'rate1index' + index} />\r\n                        <SelectEntry entry={2} key={'rate2index' + index} />\r\n                        <SelectEntry entry={3} key={'rate3index' + index} />\r\n                        <SelectEntry entry={4} key={'rate4index' + index} />\r\n                        <SelectEntry entry={5} key={'rate5index' + index} />\r\n                    </Form.Control>\r\n                    <Button variant=\"outline-success\" size=\"sm\" type=\"submit\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            server.removeEntry(data.option, data.state, index);\r\n                            this.startSearching(data.option, data.state);\r\n                        }\r\n                    }>\r\n                    <Button variant=\"outline-danger\" size=\"sm\" type=\"submit\">\r\n                        Delete Place\r\n                    </Button>\r\n                </Form>\r\n            </ListGroup.Item>\r\n           )\r\n        );\r\n\r\n    }\r\n\r\n\r\n    //executed only after the page is rendered\r\n    componentDidMount(){\r\n        const location = this.props.location;\r\n        //Anything sent from previous page is saved in props.location\r\n        if(location){\r\n            if(location.state){\r\n                //Indicates that this comes from Login page\r\n                if(location.state.user){\r\n                    //Set additional condition to escape infinite loop\r\n                    if(location.state.user !== this.state.username){\r\n                        this.SetUserName(location.state.user);\r\n                    }\r\n                }\r\n                if(location.state.option){\r\n                    this.setState({\r\n                        option: location.state.option\r\n                    })\r\n                }\r\n                if(location.state.state){\r\n                    this.setState({\r\n                        state: location.state.state\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Explictly delete the event listener when everything is deleted so\r\n    // it doesn't run on the background\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"keydown\",this.handleKeyDown);\r\n    }\r\n    //e : event object\r\n    handleKeyDown = (e) =>{\r\n        if(e.keyCode === 39) {  //Right arrow key\r\n\r\n        }else if(e.keyCode === 37) {  //Left arrow key\r\n\r\n        }\r\n    }\r\n\r\n    getPathWithCursor=(cursor)=>{\r\n        let from = {pathname: '/quiz', state: {\r\n            username: this.state.username,\r\n            cursor: cursor\r\n        }};\r\n        return from;\r\n    }\r\n  \r\n\r\n    SetUserName = (username) =>{\r\n        this.setState({\r\n            username: username\r\n        });\r\n    }\r\n\r\n\r\n\r\n    addBar(){\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand> Add Service </Navbar.Brand>\r\n                </Navbar>\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <Form inline onSubmit={\r\n                        (e)=>{\r\n                            e.preventDefault(); \r\n                            var option = document.getElementById('addoption').value;\r\n                            var place = document.getElementById('addplace').value;\r\n                            var name = document.getElementById('addname').value;\r\n                            var location = document.getElementById('addlocation').value;\r\n                            var rate = document.getElementById('addrate').value;\r\n                            this.addService(option,place,name,location,rate);\r\n                        }\r\n                    }>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Options</Navbar.Text>\r\n                        </Col>\r\n\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addoption' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option key='default'>Choose...</option>\r\n                                {this.populateOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Navbar.Text>Place</Navbar.Text>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addplace' as=\"select\" defaultValue=\"Choose...\">\r\n                                <option>Choose...</option>\r\n                                {this.populateStatesOption()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Navbar.Text>Location</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Group>\r\n                                <Form.Control id='addlocation' as=\"textarea\" rows={1} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Navbar.Text>Name</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Group>\r\n                                <Form.Control id='addname' as=\"textarea\" rows={1} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Navbar.Text>Rate</Navbar.Text>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control id='addrate' as=\"select\" defaultValue=\"Choose...\">\r\n                                <SelectEntry entry={1} key={'rate1'} />\r\n                                <SelectEntry entry={2} key={'rate2'} />\r\n                                <SelectEntry entry={3} key={'rate3'} />\r\n                                <SelectEntry entry={4} key={'rate4'} />\r\n                                <SelectEntry entry={5} key={'rate5'} />\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Button variant=\"outline-info\" type=\"submit\">Add</Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addService = (option,place,name,location,rate) =>{\r\n        this.setState({\r\n            option: option,\r\n            place: place\r\n        });\r\n        server.addEntry(option, place,name,location,rate);\r\n        // alert(option+place+name+location+rate);\r\n        \r\n    }\r\n    render() { //mandatory method\r\n        console.log(this.state);\r\n        return (    //If (this.state.username.length > 0 ) == true, show the username, otherwise go to button\r\n            <div id=\"root\">\r\n                {this.navigationBar()} \r\n                {this.searchBar()}\r\n                <ListGroup id=\"result\">\r\n                    {this.state.isSearching\r\n                    ?this.searchResult()\r\n                    :<div></div>}\r\n                </ListGroup>\r\n                {this.addBar()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;    //Components which exported can be imported on other pages","import React from 'react';\r\nimport {Redirect,Link} from 'react-router-dom';\r\nimport { Navbar,Nav,Form,Row,Col,Button,Container } from 'react-bootstrap';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){ //Constructor always receive props\r\n        super(props);   //Superconstructor\r\n        this.state = {\r\n            username: '',\r\n            authenticated: false\r\n        };\r\n    }    \r\n    navigationBar(){\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>My Nearby Places</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to='/' >Home</Nav.Link>\r\n                        <Nav.Link as={Link} to='/login' disabled>Login</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        //You don't access the DOM object directly\r\n        if(this.state.username.trim().length > 0){  //trim(): removes space at the beginning and the end\r\n            //User Successfully signed in\r\n            //Now changed the state\r\n            this.setState({\r\n                authenticated: true\r\n            });\r\n            \r\n        }\r\n        event.preventDefault();\r\n    }\r\n    onInputChange = (event) => { //add event if you need to know which function fired the function\r\n        //event target is the input tag\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value   //You need to add bracket to indicate that the string is a key\r\n        });\r\n    }\r\n\r\n    render(){\r\n        //Save the data which wants to be passed to the variable 'from'\r\n        let from = {pathname: '/', state: {user: this.state.username}};\r\n        if(this.state.authenticated){\r\n            return (\r\n                <Redirect to= {from} />\r\n            );\r\n            //Convention to provide object to the Redirect\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {this.navigationBar()}\r\n                <br></br>\r\n                <Container>\r\n                    <Form  onSubmit={this.onSubmit}>\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"2\">\r\n                            Username\r\n                            </Form.Label>\r\n                            <Col sm=\"10\">\r\n                            <Form.Control\r\n                                name = \"username\"\r\n                                placeholder=\"username\"\r\n                                onChange={this.onInputChange} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"outline-primary\" type=\"submit\">Login</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport './App.css';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' render={props => <Home {...props}/>}>\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}